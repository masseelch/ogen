// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
)

// Ref: #/components/schemas/Balloon
type Balloon struct {
	AmountMib             int    `json:"amount_mib"`
	DeflateOnOom          bool   `json:"deflate_on_oom"`
	StatsPollingIntervalS OptInt `json:"stats_polling_interval_s"`
}

func (*Balloon) describeBalloonConfigRes() {}

// Ref: #/components/schemas/BalloonStats
type BalloonStats struct {
	TargetPages        int      `json:"target_pages"`
	ActualPages        int      `json:"actual_pages"`
	TargetMib          int      `json:"target_mib"`
	ActualMib          int      `json:"actual_mib"`
	SwapIn             OptInt64 `json:"swap_in"`
	SwapOut            OptInt64 `json:"swap_out"`
	MajorFaults        OptInt64 `json:"major_faults"`
	MinorFaults        OptInt64 `json:"minor_faults"`
	FreeMemory         OptInt64 `json:"free_memory"`
	TotalMemory        OptInt64 `json:"total_memory"`
	AvailableMemory    OptInt64 `json:"available_memory"`
	DiskCaches         OptInt64 `json:"disk_caches"`
	HugetlbAllocations OptInt64 `json:"hugetlb_allocations"`
	HugetlbFailures    OptInt64 `json:"hugetlb_failures"`
}

func (*BalloonStats) describeBalloonStatsRes() {}

// Ref: #/components/schemas/BalloonStatsUpdate
type BalloonStatsUpdate struct {
	StatsPollingIntervalS int `json:"stats_polling_interval_s"`
}

// Ref: #/components/schemas/BalloonUpdate
type BalloonUpdate struct {
	AmountMib int `json:"amount_mib"`
}

// Ref: #/components/schemas/BootSource
type BootSource struct {
	BootArgs        OptString `json:"boot_args"`
	InitrdPath      OptString `json:"initrd_path"`
	KernelImagePath string    `json:"kernel_image_path"`
}

// Ref: #/components/schemas/CpuTemplate
type CpuTemplate string

const (
	CpuTemplateC3 CpuTemplate = "C3"
	CpuTemplateT2 CpuTemplate = "T2"
)

// CreateSnapshotNoContent is response for CreateSnapshot operation.
type CreateSnapshotNoContent struct{}

func (*CreateSnapshotNoContent) createSnapshotRes() {}

// CreateSyncActionNoContent is response for CreateSyncAction operation.
type CreateSyncActionNoContent struct{}

func (*CreateSyncActionNoContent) createSyncActionRes() {}

// Ref: #/components/schemas/Drive
type Drive struct {
	DriveID      string         `json:"drive_id"`
	CacheType    OptString      `json:"cache_type"`
	IsReadOnly   bool           `json:"is_read_only"`
	IsRootDevice bool           `json:"is_root_device"`
	Partuuid     OptString      `json:"partuuid"`
	PathOnHost   string         `json:"path_on_host"`
	RateLimiter  OptRateLimiter `json:"rate_limiter"`
}

// Ref: #/components/schemas/Error
type Error struct {
	FaultMessage OptString `json:"fault_message"`
}

func (*Error) createSnapshotRes()                 {}
func (*Error) createSyncActionRes()               {}
func (*Error) describeBalloonConfigRes()          {}
func (*Error) describeBalloonStatsRes()           {}
func (*Error) loadSnapshotRes()                   {}
func (*Error) mmdsConfigPutRes()                  {}
func (*Error) mmdsGetRes()                        {}
func (*Error) mmdsPatchRes()                      {}
func (*Error) mmdsPutRes()                        {}
func (*Error) patchBalloonRes()                   {}
func (*Error) patchBalloonStatsIntervalRes()      {}
func (*Error) patchGuestDriveByIDRes()            {}
func (*Error) patchGuestNetworkInterfaceByIDRes() {}
func (*Error) patchMachineConfigurationRes()      {}
func (*Error) patchVmRes()                        {}
func (*Error) putBalloonRes()                     {}
func (*Error) putGuestBootSourceRes()             {}
func (*Error) putGuestDriveByIDRes()              {}
func (*Error) putGuestNetworkInterfaceByIDRes()   {}
func (*Error) putGuestVsockRes()                  {}
func (*Error) putLoggerRes()                      {}
func (*Error) putMachineConfigurationRes()        {}
func (*Error) putMetricsRes()                     {}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

func (*ErrorStatusCode) createSnapshotRes()                 {}
func (*ErrorStatusCode) createSyncActionRes()               {}
func (*ErrorStatusCode) describeBalloonConfigRes()          {}
func (*ErrorStatusCode) describeBalloonStatsRes()           {}
func (*ErrorStatusCode) describeInstanceRes()               {}
func (*ErrorStatusCode) getExportVmConfigRes()              {}
func (*ErrorStatusCode) getMachineConfigurationRes()        {}
func (*ErrorStatusCode) loadSnapshotRes()                   {}
func (*ErrorStatusCode) mmdsConfigPutRes()                  {}
func (*ErrorStatusCode) mmdsGetRes()                        {}
func (*ErrorStatusCode) mmdsPatchRes()                      {}
func (*ErrorStatusCode) mmdsPutRes()                        {}
func (*ErrorStatusCode) patchBalloonRes()                   {}
func (*ErrorStatusCode) patchBalloonStatsIntervalRes()      {}
func (*ErrorStatusCode) patchGuestDriveByIDRes()            {}
func (*ErrorStatusCode) patchGuestNetworkInterfaceByIDRes() {}
func (*ErrorStatusCode) patchMachineConfigurationRes()      {}
func (*ErrorStatusCode) patchVmRes()                        {}
func (*ErrorStatusCode) putBalloonRes()                     {}
func (*ErrorStatusCode) putGuestBootSourceRes()             {}
func (*ErrorStatusCode) putGuestDriveByIDRes()              {}
func (*ErrorStatusCode) putGuestNetworkInterfaceByIDRes()   {}
func (*ErrorStatusCode) putGuestVsockRes()                  {}
func (*ErrorStatusCode) putLoggerRes()                      {}
func (*ErrorStatusCode) putMachineConfigurationRes()        {}
func (*ErrorStatusCode) putMetricsRes()                     {}

// Ref: #/components/schemas/FullVmConfiguration
type FullVmConfiguration struct {
	BalloonDevice OptBalloon              `json:"balloon_device"`
	BlockDevices  []Drive                 `json:"block_devices"`
	BootSource    OptBootSource           `json:"boot_source"`
	Logger        OptLogger               `json:"logger"`
	MachineConfig OptMachineConfiguration `json:"machine_config"`
	Metrics       OptMetrics              `json:"metrics"`
	MmdsConfig    OptMmdsConfig           `json:"mmds_config"`
	NetDevices    []NetworkInterface      `json:"net_devices"`
	VsockDevice   OptVsock                `json:"vsock_device"`
}

func (*FullVmConfiguration) getExportVmConfigRes() {}

// Ref: #/components/schemas/InstanceActionInfo
type InstanceActionInfo struct {
	ActionType InstanceActionInfoActionType `json:"action_type"`
}

type InstanceActionInfoActionType string

const (
	InstanceActionInfoActionTypeFlushMetrics   InstanceActionInfoActionType = "FlushMetrics"
	InstanceActionInfoActionTypeInstanceStart  InstanceActionInfoActionType = "InstanceStart"
	InstanceActionInfoActionTypeSendCtrlAltDel InstanceActionInfoActionType = "SendCtrlAltDel"
)

// Ref: #/components/schemas/InstanceInfo
type InstanceInfo struct {
	AppName    string            `json:"app_name"`
	ID         string            `json:"id"`
	State      InstanceInfoState `json:"state"`
	VmmVersion string            `json:"vmm_version"`
}

func (*InstanceInfo) describeInstanceRes() {}

type InstanceInfoState string

const (
	InstanceInfoStateNotStarted InstanceInfoState = "Not started"
	InstanceInfoStateRunning    InstanceInfoState = "Running"
	InstanceInfoStatePaused     InstanceInfoState = "Paused"
)

// LoadSnapshotNoContent is response for LoadSnapshot operation.
type LoadSnapshotNoContent struct{}

func (*LoadSnapshotNoContent) loadSnapshotRes() {}

// Ref: #/components/schemas/Logger
type Logger struct {
	Level         OptLoggerLevel `json:"level"`
	LogPath       string         `json:"log_path"`
	ShowLevel     OptBool        `json:"show_level"`
	ShowLogOrigin OptBool        `json:"show_log_origin"`
}

type LoggerLevel string

const (
	LoggerLevelError   LoggerLevel = "Error"
	LoggerLevelWarning LoggerLevel = "Warning"
	LoggerLevelInfo    LoggerLevel = "Info"
	LoggerLevelDebug   LoggerLevel = "Debug"
)

// Ref: #/components/schemas/MachineConfiguration
type MachineConfiguration struct {
	CPUTemplate     OptCpuTemplate `json:"cpu_template"`
	HtEnabled       bool           `json:"ht_enabled"`
	MemSizeMib      int            `json:"mem_size_mib"`
	TrackDirtyPages OptBool        `json:"track_dirty_pages"`
	VcpuCount       int            `json:"vcpu_count"`
}

func (*MachineConfiguration) getMachineConfigurationRes() {}

// Ref: #/components/schemas/Metrics
type Metrics struct {
	MetricsPath string `json:"metrics_path"`
}

// Ref: #/components/schemas/MmdsConfig
type MmdsConfig struct {
	Ipv4Address OptString `json:"ipv4_address"`
}

// MmdsConfigPutNoContent is response for MmdsConfigPut operation.
type MmdsConfigPutNoContent struct{}

func (*MmdsConfigPutNoContent) mmdsConfigPutRes() {}

type MmdsGetOK struct{}

func (*MmdsGetOK) mmdsGetRes() {}

// MmdsPatchNoContent is response for MmdsPatch operation.
type MmdsPatchNoContent struct{}

func (*MmdsPatchNoContent) mmdsPatchRes() {}

type MmdsPatchReq struct{}

// MmdsPutNoContent is response for MmdsPut operation.
type MmdsPutNoContent struct{}

func (*MmdsPutNoContent) mmdsPutRes() {}

type MmdsPutReq struct{}

// Ref: #/components/schemas/NetworkInterface
type NetworkInterface struct {
	AllowMmdsRequests OptBool        `json:"allow_mmds_requests"`
	GuestMAC          OptString      `json:"guest_mac"`
	HostDevName       string         `json:"host_dev_name"`
	IfaceID           string         `json:"iface_id"`
	RxRateLimiter     OptRateLimiter `json:"rx_rate_limiter"`
	TxRateLimiter     OptRateLimiter `json:"tx_rate_limiter"`
}

// NewOptBalloon returns new OptBalloon with value set to v.
func NewOptBalloon(v Balloon) OptBalloon {
	return OptBalloon{
		Value: v,
		Set:   true,
	}
}

// OptBalloon is optional Balloon.
type OptBalloon struct {
	Value Balloon
	Set   bool
}

// IsSet returns true if OptBalloon was set.
func (o OptBalloon) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBalloon) Reset() {
	var v Balloon
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBalloon) SetTo(v Balloon) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBalloon) Get() (v Balloon, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBootSource returns new OptBootSource with value set to v.
func NewOptBootSource(v BootSource) OptBootSource {
	return OptBootSource{
		Value: v,
		Set:   true,
	}
}

// OptBootSource is optional BootSource.
type OptBootSource struct {
	Value BootSource
	Set   bool
}

// IsSet returns true if OptBootSource was set.
func (o OptBootSource) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBootSource) Reset() {
	var v BootSource
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBootSource) SetTo(v BootSource) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBootSource) Get() (v BootSource, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCpuTemplate returns new OptCpuTemplate with value set to v.
func NewOptCpuTemplate(v CpuTemplate) OptCpuTemplate {
	return OptCpuTemplate{
		Value: v,
		Set:   true,
	}
}

// OptCpuTemplate is optional CpuTemplate.
type OptCpuTemplate struct {
	Value CpuTemplate
	Set   bool
}

// IsSet returns true if OptCpuTemplate was set.
func (o OptCpuTemplate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCpuTemplate) Reset() {
	var v CpuTemplate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCpuTemplate) SetTo(v CpuTemplate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCpuTemplate) Get() (v CpuTemplate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLogger returns new OptLogger with value set to v.
func NewOptLogger(v Logger) OptLogger {
	return OptLogger{
		Value: v,
		Set:   true,
	}
}

// OptLogger is optional Logger.
type OptLogger struct {
	Value Logger
	Set   bool
}

// IsSet returns true if OptLogger was set.
func (o OptLogger) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLogger) Reset() {
	var v Logger
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLogger) SetTo(v Logger) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLogger) Get() (v Logger, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLoggerLevel returns new OptLoggerLevel with value set to v.
func NewOptLoggerLevel(v LoggerLevel) OptLoggerLevel {
	return OptLoggerLevel{
		Value: v,
		Set:   true,
	}
}

// OptLoggerLevel is optional LoggerLevel.
type OptLoggerLevel struct {
	Value LoggerLevel
	Set   bool
}

// IsSet returns true if OptLoggerLevel was set.
func (o OptLoggerLevel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLoggerLevel) Reset() {
	var v LoggerLevel
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLoggerLevel) SetTo(v LoggerLevel) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLoggerLevel) Get() (v LoggerLevel, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMachineConfiguration returns new OptMachineConfiguration with value set to v.
func NewOptMachineConfiguration(v MachineConfiguration) OptMachineConfiguration {
	return OptMachineConfiguration{
		Value: v,
		Set:   true,
	}
}

// OptMachineConfiguration is optional MachineConfiguration.
type OptMachineConfiguration struct {
	Value MachineConfiguration
	Set   bool
}

// IsSet returns true if OptMachineConfiguration was set.
func (o OptMachineConfiguration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMachineConfiguration) Reset() {
	var v MachineConfiguration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMachineConfiguration) SetTo(v MachineConfiguration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMachineConfiguration) Get() (v MachineConfiguration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMetrics returns new OptMetrics with value set to v.
func NewOptMetrics(v Metrics) OptMetrics {
	return OptMetrics{
		Value: v,
		Set:   true,
	}
}

// OptMetrics is optional Metrics.
type OptMetrics struct {
	Value Metrics
	Set   bool
}

// IsSet returns true if OptMetrics was set.
func (o OptMetrics) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMetrics) Reset() {
	var v Metrics
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMetrics) SetTo(v Metrics) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMetrics) Get() (v Metrics, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMmdsConfig returns new OptMmdsConfig with value set to v.
func NewOptMmdsConfig(v MmdsConfig) OptMmdsConfig {
	return OptMmdsConfig{
		Value: v,
		Set:   true,
	}
}

// OptMmdsConfig is optional MmdsConfig.
type OptMmdsConfig struct {
	Value MmdsConfig
	Set   bool
}

// IsSet returns true if OptMmdsConfig was set.
func (o OptMmdsConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMmdsConfig) Reset() {
	var v MmdsConfig
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMmdsConfig) SetTo(v MmdsConfig) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMmdsConfig) Get() (v MmdsConfig, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMmdsPatchReq returns new OptMmdsPatchReq with value set to v.
func NewOptMmdsPatchReq(v MmdsPatchReq) OptMmdsPatchReq {
	return OptMmdsPatchReq{
		Value: v,
		Set:   true,
	}
}

// OptMmdsPatchReq is optional MmdsPatchReq.
type OptMmdsPatchReq struct {
	Value MmdsPatchReq
	Set   bool
}

// IsSet returns true if OptMmdsPatchReq was set.
func (o OptMmdsPatchReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMmdsPatchReq) Reset() {
	var v MmdsPatchReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMmdsPatchReq) SetTo(v MmdsPatchReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMmdsPatchReq) Get() (v MmdsPatchReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMmdsPutReq returns new OptMmdsPutReq with value set to v.
func NewOptMmdsPutReq(v MmdsPutReq) OptMmdsPutReq {
	return OptMmdsPutReq{
		Value: v,
		Set:   true,
	}
}

// OptMmdsPutReq is optional MmdsPutReq.
type OptMmdsPutReq struct {
	Value MmdsPutReq
	Set   bool
}

// IsSet returns true if OptMmdsPutReq was set.
func (o OptMmdsPutReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMmdsPutReq) Reset() {
	var v MmdsPutReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMmdsPutReq) SetTo(v MmdsPutReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMmdsPutReq) Get() (v MmdsPutReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRateLimiter returns new OptRateLimiter with value set to v.
func NewOptRateLimiter(v RateLimiter) OptRateLimiter {
	return OptRateLimiter{
		Value: v,
		Set:   true,
	}
}

// OptRateLimiter is optional RateLimiter.
type OptRateLimiter struct {
	Value RateLimiter
	Set   bool
}

// IsSet returns true if OptRateLimiter was set.
func (o OptRateLimiter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRateLimiter) Reset() {
	var v RateLimiter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRateLimiter) SetTo(v RateLimiter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRateLimiter) Get() (v RateLimiter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSnapshotCreateParamsSnapshotType returns new OptSnapshotCreateParamsSnapshotType with value set to v.
func NewOptSnapshotCreateParamsSnapshotType(v SnapshotCreateParamsSnapshotType) OptSnapshotCreateParamsSnapshotType {
	return OptSnapshotCreateParamsSnapshotType{
		Value: v,
		Set:   true,
	}
}

// OptSnapshotCreateParamsSnapshotType is optional SnapshotCreateParamsSnapshotType.
type OptSnapshotCreateParamsSnapshotType struct {
	Value SnapshotCreateParamsSnapshotType
	Set   bool
}

// IsSet returns true if OptSnapshotCreateParamsSnapshotType was set.
func (o OptSnapshotCreateParamsSnapshotType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSnapshotCreateParamsSnapshotType) Reset() {
	var v SnapshotCreateParamsSnapshotType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSnapshotCreateParamsSnapshotType) SetTo(v SnapshotCreateParamsSnapshotType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSnapshotCreateParamsSnapshotType) Get() (v SnapshotCreateParamsSnapshotType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTokenBucket returns new OptTokenBucket with value set to v.
func NewOptTokenBucket(v TokenBucket) OptTokenBucket {
	return OptTokenBucket{
		Value: v,
		Set:   true,
	}
}

// OptTokenBucket is optional TokenBucket.
type OptTokenBucket struct {
	Value TokenBucket
	Set   bool
}

// IsSet returns true if OptTokenBucket was set.
func (o OptTokenBucket) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTokenBucket) Reset() {
	var v TokenBucket
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTokenBucket) SetTo(v TokenBucket) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTokenBucket) Get() (v TokenBucket, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVsock returns new OptVsock with value set to v.
func NewOptVsock(v Vsock) OptVsock {
	return OptVsock{
		Value: v,
		Set:   true,
	}
}

// OptVsock is optional Vsock.
type OptVsock struct {
	Value Vsock
	Set   bool
}

// IsSet returns true if OptVsock was set.
func (o OptVsock) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVsock) Reset() {
	var v Vsock
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVsock) SetTo(v Vsock) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVsock) Get() (v Vsock, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Ref: #/components/schemas/PartialDrive
type PartialDrive struct {
	DriveID     string         `json:"drive_id"`
	PathOnHost  OptString      `json:"path_on_host"`
	RateLimiter OptRateLimiter `json:"rate_limiter"`
}

// Ref: #/components/schemas/PartialNetworkInterface
type PartialNetworkInterface struct {
	IfaceID       string         `json:"iface_id"`
	RxRateLimiter OptRateLimiter `json:"rx_rate_limiter"`
	TxRateLimiter OptRateLimiter `json:"tx_rate_limiter"`
}

// PatchBalloonNoContent is response for PatchBalloon operation.
type PatchBalloonNoContent struct{}

func (*PatchBalloonNoContent) patchBalloonRes() {}

// PatchBalloonStatsIntervalNoContent is response for PatchBalloonStatsInterval operation.
type PatchBalloonStatsIntervalNoContent struct{}

func (*PatchBalloonStatsIntervalNoContent) patchBalloonStatsIntervalRes() {}

// PatchGuestDriveByIDNoContent is response for PatchGuestDriveByID operation.
type PatchGuestDriveByIDNoContent struct{}

func (*PatchGuestDriveByIDNoContent) patchGuestDriveByIDRes() {}

// PatchGuestNetworkInterfaceByIDNoContent is response for PatchGuestNetworkInterfaceByID operation.
type PatchGuestNetworkInterfaceByIDNoContent struct{}

func (*PatchGuestNetworkInterfaceByIDNoContent) patchGuestNetworkInterfaceByIDRes() {}

// PatchMachineConfigurationNoContent is response for PatchMachineConfiguration operation.
type PatchMachineConfigurationNoContent struct{}

func (*PatchMachineConfigurationNoContent) patchMachineConfigurationRes() {}

// PatchVmNoContent is response for PatchVm operation.
type PatchVmNoContent struct{}

func (*PatchVmNoContent) patchVmRes() {}

// PutBalloonNoContent is response for PutBalloon operation.
type PutBalloonNoContent struct{}

func (*PutBalloonNoContent) putBalloonRes() {}

// PutGuestBootSourceNoContent is response for PutGuestBootSource operation.
type PutGuestBootSourceNoContent struct{}

func (*PutGuestBootSourceNoContent) putGuestBootSourceRes() {}

// PutGuestDriveByIDNoContent is response for PutGuestDriveByID operation.
type PutGuestDriveByIDNoContent struct{}

func (*PutGuestDriveByIDNoContent) putGuestDriveByIDRes() {}

// PutGuestNetworkInterfaceByIDNoContent is response for PutGuestNetworkInterfaceByID operation.
type PutGuestNetworkInterfaceByIDNoContent struct{}

func (*PutGuestNetworkInterfaceByIDNoContent) putGuestNetworkInterfaceByIDRes() {}

// PutGuestVsockNoContent is response for PutGuestVsock operation.
type PutGuestVsockNoContent struct{}

func (*PutGuestVsockNoContent) putGuestVsockRes() {}

// PutLoggerNoContent is response for PutLogger operation.
type PutLoggerNoContent struct{}

func (*PutLoggerNoContent) putLoggerRes() {}

// PutMachineConfigurationNoContent is response for PutMachineConfiguration operation.
type PutMachineConfigurationNoContent struct{}

func (*PutMachineConfigurationNoContent) putMachineConfigurationRes() {}

// PutMetricsNoContent is response for PutMetrics operation.
type PutMetricsNoContent struct{}

func (*PutMetricsNoContent) putMetricsRes() {}

// Ref: #/components/schemas/RateLimiter
type RateLimiter struct {
	Bandwidth OptTokenBucket `json:"bandwidth"`
	Ops       OptTokenBucket `json:"ops"`
}

// Ref: #/components/schemas/SnapshotCreateParams
type SnapshotCreateParams struct {
	MemFilePath  string                              `json:"mem_file_path"`
	SnapshotPath string                              `json:"snapshot_path"`
	SnapshotType OptSnapshotCreateParamsSnapshotType `json:"snapshot_type"`
	Version      OptString                           `json:"version"`
}

type SnapshotCreateParamsSnapshotType string

const (
	SnapshotCreateParamsSnapshotTypeFull SnapshotCreateParamsSnapshotType = "Full"
	SnapshotCreateParamsSnapshotTypeDiff SnapshotCreateParamsSnapshotType = "Diff"
)

// Ref: #/components/schemas/SnapshotLoadParams
type SnapshotLoadParams struct {
	EnableDiffSnapshots OptBool `json:"enable_diff_snapshots"`
	MemFilePath         string  `json:"mem_file_path"`
	SnapshotPath        string  `json:"snapshot_path"`
	ResumeVM            OptBool `json:"resume_vm"`
}

// Ref: #/components/schemas/TokenBucket
type TokenBucket struct {
	OneTimeBurst OptInt64 `json:"one_time_burst"`
	RefillTime   int64    `json:"refill_time"`
	Size         int64    `json:"size"`
}

// Ref: #/components/schemas/Vm
type VM struct {
	State VMState `json:"state"`
}

type VMState string

const (
	VMStatePaused  VMState = "Paused"
	VMStateResumed VMState = "Resumed"
)

// Ref: #/components/schemas/Vsock
type Vsock struct {
	GuestCid int    `json:"guest_cid"`
	UdsPath  string `json:"uds_path"`
	VsockID  string `json:"vsock_id"`
}
